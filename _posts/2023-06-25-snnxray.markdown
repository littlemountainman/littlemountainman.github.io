---
layout: post
comments: true
title:  "Hybrid SNN/ANN for Chest X-Ray (Pneumonia) classification using spiking activations"
excerpt: "Utilising spiking activation functions in order to classify pneumonia X-Ray images better than traditional activation functions"
---

[**!!! Code available here !!!**](https://github.com/littlemountainman/SNNXray)

Spike neural netoworks (SNNs) are neural networks that aim to mimic natural neural networks more closely than artificial neural networks do. The idea is that neurons in the SNN transmit information only when a membrane potential, an intrinsic property of the neuron related to its membrane electrical charge, reaches a predetermined value, known as the threshold, as opposed to transmitting information at each propagation cycle, as it does in typical multi-layer perceptron networks. The neuron fires when the membrane potential crosses the threshold, sending a signal to nearby neurons that cause those neurons to change their membrane potentials in response to the signal. Spiking neuron model is another name for a neuron model that fires at the exact moment of threshold crossing.

In the code corresponding to this article, a spiking activation function was used. It uses the spiking temporal activation on the forward pass and a differentiable non-spiking traditional ``` max(0,x) ``` ReLu function. 

### Data

![pneumoniadata](/assets/pneumoniadata.png)

Dataset was made available by "paultimothymooney" on [Kaggle](https://www.kaggle.com/datasets/paultimothymooney/chest-xray-pneumonia). There are 5,863 images in the dataset lables "normal" and "Pneumonia". Chest X-ray images (anterior-posterior) were selected from retrospective cohorts of pediatric patients of one to five years old from Guangzhou Women and Children’s Medical Center, Guangzhou. All chest X-ray imaging was performed as part of patients’ routine clinical care. The dataset was [originally used here in the paper by Daniel S. Kermany et. al.](https://www.cell.com/cell/fulltext/S0092-8674(18)30154-5). 

### Results

Traditional model without spiking activation achieved a `F1 score of ~0.68`

![tradmodel](/assets/tradmodel.png)

Spike neural network model with spiking activation achieved a `F1 score of ~0.77`

![snnmodel](/assets/snnmodel.png)

Therfore the spiking model delivered around `~13%` better performance than the model without the temporal spiking activation function. 


### Comments and conclusion

SNNs offer enormous promise for resolving challenging time-dependent issues, however I found that several key techniques should be used in order to achieve greatest possible results for production use. Firstly in order to determine the optimal length of time that is represented by one time step, as this may vary heavily for diffent use cases. Grid search is a possible starter, for this project I found optimal performance at around 2 seconds. Secondly, the performance advantage over the traditional ANN vanished as when adjusting the number of parameters of the model grew. However further experiments should be conducted on the matter to accurately determine effects and measure them.

In conclusion, the project offers a little insight into the world of spiking neural networks and how they could be used in practice, next to ANNs. Likely they will not replace classic ANNs anytime soon, however it could become the state of the art approach for time-dependent problems. The range of applications are incredibly wide, ranging from medicine to defense over financial markets. The real deal, however is running these algorithms on special NPU or neuromorphic hardware, such as the Intel Loihi.




